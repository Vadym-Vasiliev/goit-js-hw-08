{"mappings":"khBAAA,aACAA,OAAOC,eAAeC,EAAAC,QAAS,aAAc,CACzCC,OAAO,IAEXF,EAAAC,QAAQE,QACR,SAAyBC,GACrB,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,wCCNnC,aACAN,OAAOC,eAAeC,EAAAC,QAAS,aAAc,CACzCC,OAAO,IAEXF,EAAAC,QAAQE,QACR,SAA0BI,GACtB,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOF,MAAMK,KAAKH,yCCNxH,aACAT,OAAOC,eAAeC,EAAAC,QAAS,aAAc,CACzCC,OAAO,IAEXF,EAAAC,QAAQE,QACR,WACI,MAAM,IAAIQ,UAAU,oLCNxB,aACAb,OAAOC,eAAeC,EAAAC,QAAS,aAAc,CACzCC,OAAO,IAEXF,EAAAC,QAAQE,QAER,SAAqCS,EAAGC,GACpC,IAAKD,EAAG,OACR,GAAiB,iBAANA,EAAgB,OAAWE,EAAmBX,QAAQS,EAAGC,GACpE,IAAIE,EAAIjB,OAAOkB,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAG,GACzC,WAANJ,GAAkBH,EAAEQ,cAAaL,EAAIH,EAAEQ,YAAYC,MACvD,GAAU,QAANN,GAAqB,QAANA,EAAa,OAAOV,MAAMK,KAAKK,GAClD,GAAU,cAANA,GAAqB,2CAA2CO,KAAKP,GAAI,OAAWD,EAAmBX,QAAQS,EAAGC,IAP1H,IASgCU,EAT5BT,GAS4BS,EATeC,EAAA,WAU7BD,EAAIE,WAAaF,EAAM,CACjCpB,QAASoB,wCChBjB,aACAzB,OAAOC,eAAeC,EAAAC,QAAS,aAAc,CACzCC,OAAO,IAEXF,EAAAC,QAAQE,QACR,SAA2BC,EAAKsB,IACjB,MAAPA,GAAeA,EAAMtB,EAAIuB,UAAQD,EAAMtB,EAAIuB,QAC/C,IAAI,IAAIC,EAAI,EAAGC,EAAO,IAAIxB,MAAMqB,GAAME,EAAIF,EAAKE,IAAIC,EAAKD,GAAKxB,EAAIwB,GACjE,OAAOC,eCPX/B,OAAOC,eAAe+B,EAAS,aAAc,CACzC5B,OAAO,IAEX4B,EAAQ3B,QAKR,SAAwBC,EAAKwB,GACzB,OAAWG,EAAiB5B,QAAQC,IAAY4B,EAAkB7B,QAAQC,EAAKwB,IAAUK,EAA6B9B,QAAQC,EAAKwB,IAAUM,EAAkB/B,WALnK,IAAI4B,EAAkBI,EAAuBX,EAAA,UACzCQ,EAAmBG,EAAuBX,EAAA,UAC1CU,EAAmBC,EAAuBX,EAAA,UAC1CS,EAA8BE,EAAuBX,EAAA,UAIzD,SAASW,EAAuBZ,GAC5B,OAAOA,GAAOA,EAAIE,WAAaF,EAAM,CACjCpB,QAASoB,GCXjB,IAAMa,EAAeC,SAASC,cAAc,kBACtCC,EAAW,sBACjBH,EAAaI,iBAAiB,UA0BH,SAADC,GACxBA,EAAIC,iBACJC,QAAQC,IAAI,mBACCH,EAATI,cAAcC,QAClBC,aAAaC,WAAWT,MA7B1BH,EAAaI,iBAAiB,SAAS,SAAAC,GACrC,IACeQ,EADSC,EAAAT,EAAIU,OAApB9B,EAAgB6B,EAAhB7B,KAAMnB,EAAUgD,EAAVhD,MACVkD,EAAqD,QAA1CH,EAAAI,KAAKC,MAAMP,aAAaQ,QAAQhB,WAAU,IAA1CU,EAAAA,EAA8C,GAC7DG,EAAS/B,GAAQnB,EAEjB6C,aAAaS,QAAQjB,EAAUc,KAAKI,UAAUL","sources":["node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","src/js/03-feedback.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","// Відстежуй на формі подію input, і щоразу записуй у локальне сховище об'єкт з полями email і message,\n// у яких зберігай поточні значення полів форми.Нехай ключем для сховища буде рядок \"feedback-form-state\".\n\nconst feedBackForm = document.querySelector('.feedback-form');\nconst FORM_KEY = 'feedback-form-state';\nfeedBackForm.addEventListener('submit', formButtonSubmit);\nfeedBackForm.addEventListener('input', evt => {\n  const { name, value } = evt.target;\n  let saveDate = JSON.parse(localStorage.getItem(FORM_KEY)) ?? {};\n  saveDate[name] = value;\n\n  localStorage.setItem(FORM_KEY, JSON.stringify(saveDate));\n});\n\n//Під час завантаження сторінки перевіряй стан сховища, і якщо там є збережені дані, заповнюй ними поля форми.\n// В іншому випадку поля повинні бути порожніми.\n\nfunction messageInput() {\n  const savedMassage = localStorage.getItem(FORM_KEY);\n\n  if (savedMassage) {\n    console.log(JSON.parse(savedMassage));\n    Object.entries(JSON.parse(savedMassage)).forEach(([name, value]) => {\n      feedBackForm.elements[name].value = value;\n    });\n  }\n}\n\n//Під час сабміту форми очищуй сховище і поля форми, а також виводь у консоль об'єкт з полями email,\n//message та їхніми поточними значеннями.\n\nfunction formButtonSubmit(evt) {\n  evt.preventDefault();\n  console.log('Отправка  форми');\n  evt.currentTarget.reset();\n  localStorage.removeItem(FORM_KEY);\n}\n\n// function onFormSubmit(evt) {\n//   evt.preventDefault();\n//   const formData = new FormData(refs);\n//   formData.forEach((key, value) => console.log(`${value}: ${key}`));\n//   evt.currentTarget.reset();\n//   localStorage.removeItem(STORAGE_KEY);\n// }\n\n//Зроби так, щоб сховище оновлювалось не частіше, ніж раз на 500 мілісекунд. Для цього додай до проекту і використовуй бібліотеку lodash.throttle.\n"],"names":["Object","defineProperty","module","exports","value","default","arr","Array","isArray","iter","Symbol","iterator","from","TypeError","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","obj","parcelRequire","__esModule","len","length","i","arr2","$111a013c31e2261e$exports","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","$b00c40859be242c5$var$feedBackForm","document","querySelector","$b00c40859be242c5$var$FORM_KEY","addEventListener","evt","preventDefault","console","log","currentTarget","reset","localStorage","removeItem","ref","_target","target","saveDate","JSON","parse","getItem","setItem","stringify"],"version":3,"file":"03-feedback.a7057319.js.map"}